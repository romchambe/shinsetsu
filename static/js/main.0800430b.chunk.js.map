{"version":3,"sources":["contexts/SessionContext.ts","uicomponents/DaylightBackground.tsx","assets/images/shinsetsu-square.png","assets/images/shinsetsu-text.png","uicomponents/Timer.tsx","uicomponents/Header.tsx","contexts/ScrollContext.ts","uicomponents/Picture.tsx","uicomponents/PostsFeed.tsx","utils/fetchHashtag.ts","controllers/InstaFetcher.tsx","controllers/ScrollController.tsx","controllers/Session.tsx","utils/visibilityChange.ts","controllers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SessionContext","React","createContext","active","timer","duration","startTimer","console","log","DaylightBackground","props","useContext","backgroundOpacity","useSpring","from","opacity","to","progress","config","setProgress","backgroundColor","interpolate","range","output","gradientColor","transform","prog","window","innerWidth","Math","pow","innerHeight","gradient","background","getValue","div","className","style","right","top","children","Timer","time","floor","value","Header","anim","setAnim","timerOpacity","contentsLoaded","translateY","translateLogo","translateTimer","contentScrolled","img","src","square","alt","width","brand","height","ScrollContext","scrolling","shouldReload","deactivateReload","Picture","getRelativeTime","timestamp","images","description","objectFit","maxHeight","now","Date","post","formatter","Intl","RelativeTimeFormat","numberOfMinutes","round","format","numberOfHours","numberOfDays","PostsFeed","posts","useState","displayedPosts","setDisplayed","idsIndex","setIdsIndex","loadBatch","useCallback","limit","newPosts","newIds","forEach","index","includes","id","push","useEffect","length","type","color","timeout","parseHtml","data","matchOrThrow","dataObj","substring","targetObject","charCounter","closureCount","chars","split","error","JSON","parse","join","extractPostsData","rawPosts","TagPage","graphql","hashtag","edge_hashtag_to_media","edges","map","rawPost","node","taken_at_timestamp","edge_media_to_caption","text","thumbnail_resources","reduce","prev","current","config_width","sort","a","b","target","match","Error","InstaFetcher","state","this","context","miniget","instaHtml","setState","render","Component","contextType","ScrollController","scrollContainer","reloadAnim","handleScroll","e","currentTarget","scrollTop","scrollMax","scrollHeight","clientHeight","prevState","setContentScrolled","setTimeout","clearTimeout","Provider","onScroll","ref","marginBottom","Session","setInterval","updateTime","stopTimer","clearInterval","endSession","sessionRestart","localStorage","setItem","toString","onVisibilityChange","event","document","visibilityState","visibilityChange","hidden","doc","msHidden","webkitHidden","getVisibilityEvent","addEventListener","App","main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0800430b.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const SessionContext = React.createContext({\n  active: true,\n  timer: 0,\n  duration: 180000,\n  startTimer: () => {\n    console.log(\"\")\n  },\n})\n","import React, { useContext } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport { SessionContext } from \"../contexts/SessionContext\"\n\nconst entryThreshold = 0.2,\n  exitThreshold = 0.8\n\nexport const DaylightBackground: React.FunctionComponent<{\n  contentsLoaded: boolean\n}> = (props) => {\n  const { active, timer, duration } = useContext(SessionContext)\n\n  const backgroundOpacity = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  })\n  const [{ progress }, setProgress] = useSpring(() => ({\n    progress: 0,\n    config: { duration: 1000 },\n  }))\n\n  setProgress({ progress: timer / duration })\n\n  const backgroundColor = progress.interpolate({\n    range: [0, entryThreshold, exitThreshold, 1],\n    output: [\"#ff9696\", \"#ffdaa7\", \"#ffdaa7\", \"#b09afe\"],\n  })\n\n  const gradientColor = progress.interpolate({\n    range: [0, entryThreshold, exitThreshold, 1],\n    output: [\"#ffe6e6\", \"#fff6ea\", \"#fff6ea\", \"#efebfa\"],\n  })\n\n  const transform = progress.interpolate(\n    (prog) =>\n      `translate(-${prog * (window.innerWidth + 64)}px,${\n        Math.pow(2 * prog - 1, 2) * 0.3 * window.innerHeight\n      }px)`\n  )\n\n  const gradient = {\n    background: `linear-gradient(${\n      270 - 180 * progress.getValue()\n    }deg, ${gradientColor.getValue()}, transparent)`,\n  }\n\n  return (\n    <animated.div\n      className=\"flex min-h-full w-full flex-col overflow-hidden\"\n      style={{ ...gradient, ...backgroundOpacity }}\n    >\n      {active ? (\n        <animated.div\n          className={`absolute rounded-2xl w-8 h-8`}\n          style={{\n            right: -32,\n            top: 32,\n            transform,\n            backgroundColor,\n          }}\n        ></animated.div>\n      ) : null}\n\n      {props.children}\n    </animated.div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/shinsetsu-square.7dd6f5e2.png\";","export default __webpack_public_path__ + \"static/media/shinsetsu-text.9f84c9e4.png\";","import React from \"react\"\n\nexport const Timer: React.FunctionComponent<{ value: number }> = (\n  props\n) => {\n  const time = `${\n    Math.floor(props.value / 60000) < 10 ? \"0\" : \"\"\n  }${Math.floor(props.value / 60000)}:${\n    Math.floor((props.value % 60000) / 1000) < 10 ? \"0\" : \"\"\n  }${Math.floor((props.value % 60000) / 1000)}`\n\n  return (\n    <div className=\"rounded-lg bg-white w-40 h-12\">\n      <div className=\"text-3xl text-center leading-none py-2 font-bold text-funky-text\">\n        {time}\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { animated, useSpring } from \"react-spring\"\nimport square from \"../assets/images/shinsetsu-square.png\"\nimport brand from \"../assets/images/shinsetsu-text.png\"\nimport { SessionContext } from \"../contexts/SessionContext\"\nimport { Timer } from \"./Timer\"\n\ninterface Props {\n  contentScrolled: boolean\n  contentsLoaded: boolean\n}\n\nexport const Header: React.FunctionComponent<Props> = (props) => {\n  const { timer } = useContext(SessionContext)\n\n  const [anim, setAnim] = useSpring(() => ({\n    value: 0,\n  }))\n\n  const timerOpacity = useSpring({\n    opacity: props.contentsLoaded ? 1 : 0,\n  })\n\n  const translateY = anim.value.interpolate(\n    (progress) => `translate(0px, -${progress * 104}px)`\n  )\n\n  const opacity = anim.value.interpolate((progress) => 1 - progress)\n\n  const translateLogo = anim.value.interpolate(\n    (progress) => `translate(-${progress * 86}px, ${progress * 104}px)`\n  )\n\n  const translateTimer = anim.value.interpolate(\n    (progress) => `translate(${progress * 30}px, 0px)`\n  )\n\n  if (props.contentScrolled) {\n    setAnim({ value: 1 })\n  }\n  if (!props.contentScrolled) {\n    setAnim({ value: 0 })\n  }\n  return (\n    <animated.div\n      className=\"flex flex-col w-full py-6 items-center\"\n      style={{ transform: translateY }}\n    >\n      <animated.img\n        src={square}\n        alt=\"shinsetsu logo\"\n        style={{ width: 48, transform: translateLogo }}\n      />\n      <animated.img\n        alt=\"shinsetsu\"\n        src={brand}\n        style={{ height: 20, opacity }}\n        className=\"mt-3\"\n      />\n\n      <animated.div\n        className=\"mt-6\"\n        style={{ ...{ transform: translateTimer }, ...timerOpacity }}\n      >\n        <Timer value={timer} />\n      </animated.div>\n    </animated.div>\n  )\n}\n","import React from \"react\"\n\nexport const ScrollContext = React.createContext({\n  scrolling: false,\n  shouldReload: false,\n  deactivateReload: () => {\n    console.log(\"\")\n  },\n})\n","import React from \"react\"\nimport { Post } from \"../controllers/InstaFetcher\"\n\nexport const Picture: React.FunctionComponent<Post> = (props) => {\n  return (\n    <div className=\"block mb-4 rounded bg-white border border-yellow-border\">\n      <div className=\"font-yogasanspro py-4 px-3  font-bold text-black\">\n        {getRelativeTime(props.timestamp)}\n      </div>\n      <img\n        src={props.images.src}\n        alt={props.description}\n        style={{\n          width: \"28rem\",\n          height: \"28rem\",\n          objectFit: \"contain\",\n        }}\n      />\n      <div\n        className=\"font-yogasanspro py-3 px-3 text-md overflow-hidden\"\n        style={{ maxHeight: \"8.5rem\" }}\n      >\n        {props.description}\n      </div>\n    </div>\n  )\n}\n\nfunction getRelativeTime(timestamp: number): string {\n  const now = Date.now()\n  const post = timestamp * 1000\n  const formatter = new Intl.RelativeTimeFormat(\"fr\")\n  if (now - post < 3600000) {\n    const numberOfMinutes = Math.round((post - now) / 60000)\n    return formatter.format(numberOfMinutes, \"minutes\")\n  }\n  if (now - post < 864000000) {\n    const numberOfHours = Math.round((post - now) / 3600000)\n    return formatter.format(numberOfHours, \"hours\")\n  }\n\n  const numberOfDays = Math.round((post - now) / 86400000)\n  return formatter.format(numberOfDays, \"days\")\n}\n","import React, { useCallback, useContext, useEffect, useState } from \"react\"\nimport { animated, useSpring } from \"react-spring\"\nimport { ScrollContext } from \"../contexts/ScrollContext\"\nimport { Post } from \"../controllers/InstaFetcher\"\nimport { Picture } from \"./Picture\"\nimport Loader from \"react-loader-spinner\"\n\nconst postBatch = 9\ninterface Props {\n  posts: Post[]\n  contentsLoaded: boolean\n}\nexport const PostsFeed: React.FunctionComponent<Props> = ({\n  posts,\n  contentsLoaded,\n}: Props) => {\n  const [displayedPosts, setDisplayed] = useState<JSX.Element[]>([])\n  const [idsIndex, setIdsIndex] = useState<string[]>([])\n  const { shouldReload, deactivateReload } = useContext(ScrollContext)\n\n  const backgroundOpacity = useSpring({\n    opacity: contentsLoaded ? 1 : 0,\n  })\n\n  const loadBatch = useCallback(\n    (limit: number) => {\n      const newPosts: JSX.Element[] = []\n      const newIds: string[] = []\n\n      posts.forEach((post, index) => {\n        if (index < limit && !idsIndex.includes(post.id)) {\n          newPosts.push(<Picture key={post.id} {...post} />)\n          newIds.push(post.id)\n        }\n      })\n\n      setDisplayed([...displayedPosts, ...newPosts])\n      setIdsIndex([...idsIndex, ...newIds])\n    },\n    [posts]\n  )\n\n  useEffect(() => {\n    loadBatch(displayedPosts.length + postBatch)\n    deactivateReload()\n  }, [shouldReload])\n\n  if (posts.length > 0 && displayedPosts.length === 0) {\n    loadBatch(displayedPosts.length + postBatch)\n  }\n\n  console.log(\"RENDER FEED\", backgroundOpacity)\n  return contentsLoaded ? (\n    <animated.div style={{ ...{ width: \"28rem\" }, ...backgroundOpacity }}>\n      {displayedPosts.length > 0 ? (\n        <div className=\"text-xl font-yogasanspro tracking-tight text-md px-1 pb-2\">\n          🏔 monogatari de la Montagne Enneigée\n        </div>\n      ) : null}\n      {displayedPosts}\n    </animated.div>\n  ) : (\n    <animated.div\n      className=\"flex flex-col items-center\"\n      style={{ width: \"28rem\" }}\n    >\n      <Loader\n        type=\"Audio\"\n        color=\"#9a82e6\"\n        height={32}\n        width={32}\n        timeout={5000} //3 secs\n      />\n      <div className=\"text-center mt-6\">\n        la nuit venue, la neige fraîche refléta les astres dans un\n        silencieux scintillement\n      </div>\n    </animated.div>\n  )\n}\n","import { Post } from \"../controllers/InstaFetcher\"\n\nexport interface InstaImage {\n  src: string\n  config_width: number\n  config_height: number\n}\n\nexport function parseHtml(data: string): unknown {\n  const index = matchOrThrow(data, \"entry_data\")\n\n  const dataObj = data.substring(index)\n\n  const targetObject = [\"{\"]\n\n  try {\n    let charCounter = 0\n    let closureCount = 1\n\n    const openClosure = dataObj.substring(matchOrThrow(dataObj, \"{\") + 1)\n    const chars = openClosure.split(\"\")\n\n    while (closureCount > 0) {\n      if (chars[charCounter] === \"{\") {\n        closureCount += 1\n      }\n\n      if (chars[charCounter] === \"}\") {\n        closureCount -= 1\n      }\n\n      if (closureCount > 0) {\n        targetObject.push(chars[charCounter])\n      }\n\n      charCounter += 1\n    }\n    targetObject.push(\"}\")\n  } catch (error) {\n    console.error(error)\n  }\n\n  return JSON.parse(targetObject.join(\"\"))\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function extractPostsData(rawPosts: any): Post[] {\n  let posts =\n    rawPosts.TagPage[0].graphql.hashtag.edge_hashtag_to_media.edges\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  posts = posts.map((rawPost: any) => {\n    const { node } = rawPost\n    const { id } = node\n    const timestamp = node.taken_at_timestamp\n    let description = \"\"\n    try {\n      description = node.edge_media_to_caption.edges[0].node.text\n    } catch (error) {\n      console.error(error, node)\n    }\n\n    const images = node.thumbnail_resources.reduce(\n      (prev: InstaImage, current: InstaImage) => {\n        return prev.config_width < current.config_width ? current : prev\n      }\n    )\n\n    return { timestamp, images, description, id }\n  })\n\n  posts.sort((a: Post, b: Post) => b.timestamp - a.timestamp)\n  return posts\n}\n\nfunction matchOrThrow(data: string, target: string) {\n  const match = data.match(target)\n\n  if (!!match && !!match.index) {\n    return match.index\n  } else {\n    throw new Error(\"no data\")\n  }\n}\n","import { Component } from \"react\"\nimport miniget from \"miniget\"\nimport { SessionContext } from \"../contexts/SessionContext\"\nimport {\n  InstaImage,\n  parseHtml,\n  extractPostsData,\n} from \"../utils/fetchHashtag\"\n\ninterface Props {\n  hashtag: string\n  main?: boolean\n  render: (props: State) => JSX.Element\n}\n\ninterface State {\n  contentsLoaded: boolean\n  posts: Post[]\n}\n\nexport interface PostsList {\n  posts: Post[]\n}\nexport interface Post {\n  images: InstaImage\n  timestamp: number\n  description: string\n  id: string\n}\n\nexport class InstaFetcher extends Component<Props, State> {\n  static contextType = SessionContext\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      posts: [],\n      contentsLoaded: false,\n    }\n  }\n\n  async componentDidMount(): Promise<void> {\n    console.log(this.context)\n    const instaHtml = await miniget(\n      `https://instagram.com/explore/tags/${this.props.hashtag}/`\n    ).text()\n\n    const data = parseHtml(instaHtml)\n    const posts = extractPostsData(data)\n\n    this.setState({ posts, contentsLoaded: true })\n    this.context.startTimer()\n  }\n\n  render(): JSX.Element {\n    return this.props.render(this.state)\n  }\n}\n","import React, { Component } from \"react\"\nimport { Spring } from \"react-spring/renderprops\"\nimport { ScrollContext } from \"../contexts/ScrollContext\"\nimport Loader from \"react-loader-spinner\"\ninterface Props {\n  setContentScrolled: React.Dispatch<React.SetStateAction<boolean>>\n}\n\ninterface State {\n  scrolling: boolean\n  shouldReload: boolean\n  reloadAnim: boolean\n  deactivateReload: () => void\n}\n\nexport class ScrollController extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      scrolling: false,\n      shouldReload: false,\n      reloadAnim: false,\n      deactivateReload: () => this.setState({ shouldReload: false }),\n    }\n  }\n\n  scrollContainer: HTMLDivElement | null = null\n  reloadAnim: NodeJS.Timeout | null = null\n\n  handleScroll: (e: React.UIEvent<HTMLElement>) => void = (e) => {\n    console.log(\"Scroll\", e.currentTarget.scrollTop)\n    const scrollMax = this.scrollContainer\n      ? this.scrollContainer.scrollHeight -\n        this.scrollContainer.clientHeight\n      : null\n\n    if (e.currentTarget.scrollTop > 16) {\n      this.setState((prevState) => {\n        if (prevState.scrolling) {\n          return null\n        } else {\n          this.props.setContentScrolled(true)\n          return { scrolling: true }\n        }\n      })\n    }\n\n    if (e.currentTarget.scrollTop <= 16) {\n      this.setState((prevState) => {\n        if (prevState.scrolling) {\n          this.props.setContentScrolled(false)\n          return { scrolling: false }\n        } else {\n          return null\n        }\n      })\n    }\n    if (!!scrollMax && e.currentTarget.scrollTop >= scrollMax - 16) {\n      this.setState((prevState) => {\n        if (prevState.reloadAnim) {\n          return null\n        } else {\n          return { reloadAnim: true }\n        }\n      })\n\n      if (!this.reloadAnim) {\n        this.reloadAnim = setTimeout(() => {\n          this.setState((prevState) => {\n            if (prevState.shouldReload) {\n              return null\n            } else {\n              return { shouldReload: true, reloadAnim: false }\n            }\n          })\n\n          if (this.reloadAnim) {\n            clearTimeout(this.reloadAnim)\n          }\n        }, 800)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <ScrollContext.Provider value={this.state}>\n        <Spring\n          from={{ transform: \"translate(0px, 0px)\" }}\n          to={{\n            transform: `translate(0px, ${\n              this.state.scrolling ? -104 : 0\n            }px)`,\n          }}\n        >\n          {(props) => (\n            <div\n              className=\"flex flex-col items-center overflow-y-auto pb-12\"\n              onScroll={this.handleScroll}\n              ref={(scrollContainer) =>\n                (this.scrollContainer = scrollContainer)\n              }\n              style={{ ...props, ...{ marginBottom: -104 } }}\n            >\n              {this.props.children}\n              {this.state.reloadAnim ? (\n                <div className=\"mt-6\">\n                  <Loader\n                    type=\"Audio\"\n                    color=\"#9a82e6\"\n                    height={32}\n                    width={32}\n                    timeout={5000} //3 secs\n                  />\n                </div>\n              ) : null}\n            </div>\n          )}\n        </Spring>\n      </ScrollContext.Provider>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { SessionContext } from \"../contexts/SessionContext\"\nimport { Header } from \"../uicomponents/Header\"\nimport { getVisibilityEvent } from \"../utils/visibilityChange\"\n\ninterface SessionState {\n  active: boolean\n  timer: number\n  duration: number\n  startTimer: () => void\n  sessionRestart: number | null\n}\n\nexport class Session extends Component<{}, SessionState> {\n  timer: null | NodeJS.Timeout = null\n\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      active: true,\n      timer: 0,\n      duration: 30000,\n      startTimer: this.startTimer,\n      sessionRestart: null,\n    }\n  }\n\n  componentDidMount(): void {\n    const { visibilityChange } = getVisibilityEvent()\n\n    if (\n      !!visibilityChange &&\n      typeof document.addEventListener !== \"undefined\"\n    ) {\n      document.addEventListener(visibilityChange, this.onVisibilityChange)\n    }\n  }\n\n  startTimer: () => void = () => {\n    this.timer = setInterval(this.updateTime, 1000)\n  }\n\n  stopTimer: () => void = () => {\n    if (!!this.timer) {\n      clearInterval(this.timer)\n    }\n    this.timer = null\n  }\n\n  endSession: () => void = () => {\n    const sessionRestart = Date.now() + 20 * 60000\n\n    window.localStorage.setItem(\n      \"sessionRestart\",\n      sessionRestart.toString()\n    )\n\n    this.setState({ sessionRestart, active: false })\n  }\n\n  updateTime: () => void = () => {\n    this.setState((prevState) => {\n      if (prevState.timer + 1000 > prevState.duration) {\n        this.stopTimer()\n        this.endSession()\n        return { active: false, timer: prevState.timer }\n      }\n\n      return { active: true, timer: prevState.timer + 1000 }\n    })\n  }\n\n  onVisibilityChange: (event: Event) => void = (event) => {\n    console.log(\"EVENT\", event)\n    if (document.visibilityState === \"hidden\" && this.timer) {\n      this.stopTimer()\n    }\n    if (document.visibilityState === \"visible\" && !this.timer) {\n      this.startTimer()\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <SessionContext.Provider value={this.state}>\n        {this.state.active ? (\n          this.props.children\n        ) : (\n          <div className=\"flex flex-col items-center w-full\">\n            <Header contentScrolled={false} contentsLoaded={false} />\n            <div className=\"mt-6\">\n              dans quelques minutes, la neige fraiche aura fondu,\n              patience... ;)\n            </div>\n          </div>\n        )}\n      </SessionContext.Provider>\n    )\n  }\n}\n","export function getVisibilityEvent(): {\n  hidden: string | null\n  visibilityChange: string | null\n} {\n  let hidden = null,\n    visibilityChange = null\n  const doc = document as Document & {\n    msHidden: unknown\n    webkitHidden: unknown\n  }\n  if (typeof doc.hidden !== \"undefined\") {\n    // Opera 12.10 and Firefox 18 and later support\n    hidden = \"hidden\"\n    visibilityChange = \"visibilitychange\"\n  } else if (typeof doc.msHidden !== \"undefined\") {\n    hidden = \"msHidden\"\n    visibilityChange = \"msvisibilitychange\"\n  } else if (typeof doc.webkitHidden !== \"undefined\") {\n    hidden = \"webkitHidden\"\n    visibilityChange = \"webkitvisibilitychange\"\n  }\n\n  return { hidden, visibilityChange }\n}\n","import React, { useState } from \"react\"\nimport \"../assets/styles/tailwind.output.css\"\nimport { DaylightBackground } from \"../uicomponents/DaylightBackground\"\nimport { Header } from \"../uicomponents/Header\"\nimport { PostsFeed } from \"../uicomponents/PostsFeed\"\nimport { InstaFetcher } from \"./InstaFetcher\"\nimport { ScrollController } from \"./ScrollController\"\nimport { Session } from \"./Session\"\n\nconst App: React.FunctionComponent<{}> = () => {\n  const [contentScrolled, setContentScrolled] = useState<boolean>(false)\n  return (\n    <div className=\"h-screen w-full flex\">\n      <Session>\n        <InstaFetcher\n          hashtag=\"chamonix\"\n          main\n          render={({ contentsLoaded, posts }) => (\n            <DaylightBackground contentsLoaded={contentsLoaded}>\n              <Header\n                contentScrolled={contentScrolled}\n                contentsLoaded={contentsLoaded}\n              />\n              <ScrollController setContentScrolled={setContentScrolled}>\n                <PostsFeed posts={posts} contentsLoaded={contentsLoaded} />\n              </ScrollController>\n            </DaylightBackground>\n          )}\n        />\n      </Session>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry)\n        getFID(onPerfEntry)\n        getFCP(onPerfEntry)\n        getLCP(onPerfEntry)\n        getTTFB(onPerfEntry)\n      }\n    )\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./assets/styles/index.css\"\nimport App from \"./controllers/App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}