{"version":3,"sources":["assets/images/shinsetsu-square.png","assets/images/shinsetsu-text.png","uicomponents/Timer.tsx","uicomponents/Header.tsx","utils/visibilityChange.ts","controllers/Session.tsx","contexts/SessionContext.ts","uicomponents/DaylightBackground.tsx","contexts/ScrollContext.ts","uicomponents/Picture.tsx","uicomponents/PostsFeed.tsx","utils/fetchHashtag.ts","controllers/InstaFetcher.tsx","uicomponents/Hero.tsx","controllers/ScrollController.tsx","controllers/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Timer","props","time","Math","floor","value","className","Header","timer","useContext","SessionContext","useSpring","anim","setAnim","timerOpacity","opacity","contentsLoaded","translateY","interpolate","progress","translateLogo","translateTimer","contentScrolled","div","style","transform","img","src","square","alt","width","brand","height","getVisibilityEvent","hidden","visibilityChange","doc","document","msHidden","webkitHidden","SESSION_STATUS","LOCAL_STORAGE_KEYS","SESSION_DURATION","Session","nextTimer","persistState","nextState","state","prevState","getStoredSessionState","window","localStorage","setItem","SESSION_STATE","JSON","stringify","storeState","setState","startSession","stopNextTimer","startSessionTime","Date","now","active","status","ONGOING","endSession","stopTimer","nextSessionTime","WAITING_NEXT","startTimer","setInterval","updateTime","console","log","clearInterval","startNextTimer","updateNextTime","onVisibilityChange","event","visibilityState","PAUSED","LOADING","duration","contentsCallback","addEventListener","this","storedState","undefined","removeEventListener","Provider","children","background","letterSpacing","Component","getItem","parse","React","createContext","DaylightBackground","backgroundOpacity","from","to","config","setProgress","backgroundColor","range","output","gradientColor","prog","innerWidth","pow","innerHeight","gradient","getValue","right","top","ScrollContext","scrolling","shouldReload","deactivateReload","Picture","getRelativeTime","timestamp","images","description","objectFit","maxHeight","post","formatter","Intl","RelativeTimeFormat","numberOfMinutes","round","format","numberOfHours","numberOfDays","PostsFeed","posts","useState","displayedPosts","setDisplayed","idsIndex","setIdsIndex","loadBatch","useCallback","limit","newPosts","newIds","forEach","index","includes","id","push","useEffect","length","type","color","timeout","parseHtml","data","matchOrThrow","dataObj","substring","targetObject","charCounter","closureCount","chars","split","error","join","extractPostsData","rawPosts","TagPage","graphql","hashtag","edge_hashtag_to_media","edges","map","rawPost","node","taken_at_timestamp","edge_media_to_caption","text","thumbnail_resources","reduce","prev","current","config_width","sort","a","b","target","match","Error","InstaFetcher","context","miniget","instaHtml","render","contextType","Hero","ScrollController","scrollContainer","reloadAnim","handleScroll","e","scrollMax","scrollHeight","clientHeight","currentTarget","scrollTop","setContentScrolled","setTimeout","clearTimeout","onScroll","ref","marginBottom","App","main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e3b3212.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/shinsetsu-square.7dd6f5e2.png\";","export default __webpack_public_path__ + \"static/media/shinsetsu-text.9f84c9e4.png\";","import React from \"react\"\n\nexport const Timer: React.FunctionComponent<{ value: number }> = (\n  props\n) => {\n  const time = `${\n    Math.floor(props.value / 60000) < 10 ? \"0\" : \"\"\n  }${Math.floor(props.value / 60000)}:${\n    Math.floor((props.value % 60000) / 1000) < 10 ? \"0\" : \"\"\n  }${Math.floor((props.value % 60000) / 1000)}`\n\n  return (\n    <div className=\"rounded-lg bg-white w-40 h-12\">\n      <div className=\"text-3xl text-center leading-none py-2 font-bold text-funky-text\">\n        {time}\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { animated, useSpring } from \"react-spring\"\nimport square from \"../assets/images/shinsetsu-square.png\"\nimport brand from \"../assets/images/shinsetsu-text.png\"\nimport { SessionContext } from \"../contexts/SessionContext\"\nimport { Timer } from \"./Timer\"\n\ninterface Props {\n  contentScrolled: boolean\n  contentsLoaded: boolean\n}\n\nexport const Header: React.FunctionComponent<Props> = (props) => {\n  const { timer } = useContext(SessionContext)\n\n  const [anim, setAnim] = useSpring(() => ({\n    value: 0,\n  }))\n\n  const timerOpacity = useSpring({\n    opacity: props.contentsLoaded ? 1 : 0,\n  })\n\n  const translateY = anim.value.interpolate(\n    (progress) => `translate(0px, -${progress * 104}px)`\n  )\n\n  const opacity = anim.value.interpolate((progress) => 1 - progress)\n\n  const translateLogo = anim.value.interpolate(\n    (progress) => `translate(-${progress * 86}px, ${progress * 104}px)`\n  )\n\n  const translateTimer = anim.value.interpolate(\n    (progress) => `translate(${progress * 30}px, 0px)`\n  )\n\n  if (props.contentScrolled) {\n    setAnim({ value: 1 })\n  }\n  if (!props.contentScrolled) {\n    setAnim({ value: 0 })\n  }\n  return (\n    <animated.div\n      className=\"flex flex-col w-full py-6 items-center\"\n      style={{ transform: translateY }}\n    >\n      <animated.img\n        src={square}\n        alt=\"shinsetsu logo\"\n        style={{ width: 48, transform: translateLogo }}\n      />\n      <animated.img\n        alt=\"shinsetsu\"\n        src={brand}\n        style={{ height: 20, opacity }}\n        className=\"mt-3\"\n      />\n\n      <animated.div\n        className=\"mt-6\"\n        style={{ ...{ transform: translateTimer }, ...timerOpacity }}\n      >\n        <Timer value={timer} />\n      </animated.div>\n    </animated.div>\n  )\n}\n","export function getVisibilityEvent(): {\n  hidden: string | null\n  visibilityChange: string | null\n} {\n  let hidden = null,\n    visibilityChange = null\n  const doc = document as Document & {\n    msHidden: unknown\n    webkitHidden: unknown\n  }\n  if (typeof doc.hidden !== \"undefined\") {\n    // Opera 12.10 and Firefox 18 and later support\n    hidden = \"hidden\"\n    visibilityChange = \"visibilitychange\"\n  } else if (typeof doc.msHidden !== \"undefined\") {\n    hidden = \"msHidden\"\n    visibilityChange = \"msvisibilitychange\"\n  } else if (typeof doc.webkitHidden !== \"undefined\") {\n    hidden = \"webkitHidden\"\n    visibilityChange = \"webkitvisibilitychange\"\n  }\n\n  return { hidden, visibilityChange }\n}\n","import React, { Component } from \"react\"\n\nimport { SessionContext } from \"../contexts/SessionContext\"\nimport { Header } from \"../uicomponents/Header\"\nimport { Timer } from \"../uicomponents/Timer\"\nimport { getVisibilityEvent } from \"../utils/visibilityChange\"\n\ninterface SessionState {\n  active: boolean\n  timer: number\n  nextTimer: number\n  status: SESSION_STATUS\n  duration: number\n  nextSessionTime: number | null\n  startSessionTime: number | null\n  contentsLoaded: boolean\n  contentsCallback: () => void\n}\n\nconst SESSION_DURATION = 300000\nconst BREAK_DURATION = 10 * 60000\n\nexport enum SESSION_STATUS {\n  ONGOING,\n  PAUSED,\n  WAITING_NEXT,\n  LOADING,\n}\n\nexport enum LOCAL_STORAGE_KEYS {\n  SESSION_STATE = \"sessionState\",\n}\n\nexport class Session extends Component<{}, SessionState> {\n  timer: null | NodeJS.Timeout = null\n  nextTimer: null | NodeJS.Timeout = null\n\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      active: false,\n      status: SESSION_STATUS.LOADING,\n      timer: 0,\n      nextTimer: 0,\n      duration: SESSION_DURATION,\n      nextSessionTime: null,\n      startSessionTime: null,\n      contentsLoaded: false,\n      contentsCallback: () =>\n        this.setState({\n          contentsLoaded: true,\n          status: SESSION_STATUS.ONGOING,\n        }),\n    }\n  }\n\n  componentDidMount(): void {\n    const { visibilityChange } = getVisibilityEvent()\n\n    if (\n      !!visibilityChange &&\n      typeof document.addEventListener !== \"undefined\"\n    ) {\n      document.addEventListener(visibilityChange, this.onVisibilityChange)\n    }\n\n    const storedState = getStoredSessionState()\n    console.log(\"STORED\", storedState)\n\n    if (storedState) {\n      if (\n        storedState.active === undefined ||\n        storedState.active === null\n      ) {\n        this.persistState({\n          startSessionTime: Date.now(),\n          nextSessionTime: null,\n          active: true,\n          status: SESSION_STATUS.LOADING,\n        })\n      }\n\n      switch (storedState.status) {\n        case SESSION_STATUS.PAUSED:\n        case SESSION_STATUS.ONGOING:\n        case SESSION_STATUS.LOADING:\n          this.persistState({\n            startSessionTime: Date.now() - storedState.timer,\n            nextSessionTime: null,\n            timer: storedState.timer,\n            active: true,\n            status: SESSION_STATUS.LOADING,\n          })\n          break\n\n        case SESSION_STATUS.WAITING_NEXT:\n          if (\n            !storedState.nextSessionTime ||\n            (storedState.nextSessionTime &&\n              Date.now() > storedState.nextSessionTime)\n          ) {\n            this.persistState({\n              startSessionTime: Date.now(),\n              nextSessionTime: null,\n              timer: 0,\n              active: true,\n              status: SESSION_STATUS.LOADING,\n            })\n          } else {\n            this.persistState(storedState)\n          }\n\n          break\n      }\n    }\n\n    if (!storedState) {\n      this.persistState({ active: true, status: SESSION_STATUS.ONGOING })\n    }\n  }\n\n  persistState = (nextState: Partial<SessionState>): void => {\n    storeState(nextState)\n    this.setState((prevState) => ({ ...prevState, ...nextState }))\n  }\n\n  startSession: () => void = () => {\n    this.stopNextTimer()\n    const startSessionTime = Date.now()\n\n    this.persistState({\n      startSessionTime,\n      active: true,\n      status: SESSION_STATUS.ONGOING,\n    })\n  }\n\n  endSession: () => void = () => {\n    this.stopTimer()\n    const nextSessionTime = Date.now() + BREAK_DURATION\n\n    this.persistState({\n      nextSessionTime,\n      active: false,\n      timer: 0,\n      status: SESSION_STATUS.WAITING_NEXT,\n    })\n  }\n\n  startTimer: () => void = () => {\n    if (this.state.status !== SESSION_STATUS.WAITING_NEXT) {\n      this.timer = setInterval(this.updateTime, 1000)\n    }\n  }\n\n  stopTimer: () => void = () => {\n    if (!!this.timer) {\n      console.log(\"clear\")\n      clearInterval(this.timer)\n    }\n    this.timer = null\n  }\n\n  startNextTimer: () => void = () => {\n    console.log(\"starting next 2\")\n    if (this.state.status === SESSION_STATUS.WAITING_NEXT) {\n      console.log(\"starting next\")\n      this.nextTimer = setInterval(this.updateNextTime, 1000)\n    }\n  }\n\n  stopNextTimer: () => void = () => {\n    if (!!this.nextTimer) {\n      console.log(\"clear\")\n      clearInterval(this.nextTimer)\n    }\n    this.nextTimer = null\n  }\n\n  updateTime: () => void = () => {\n    console.log(\"TIMER\", this.state.timer, this.timer)\n    if (this.state.timer + 1000 >= SESSION_DURATION) {\n      this.endSession()\n    } else {\n      this.persistState({ active: true, timer: this.state.timer + 1000 })\n    }\n  }\n\n  updateNextTime: () => void = () => {\n    console.log(\n      \"NEXT TIMER\",\n      this.state.nextTimer,\n      this.state.nextSessionTime\n        ? this.state.nextSessionTime - Date.now()\n        : null\n    )\n    if (this.state.nextSessionTime) {\n      if (Date.now() >= this.state.nextSessionTime) {\n        this.startSession()\n      } else {\n        this.persistState({\n          active: false,\n          nextTimer: this.state.nextSessionTime - Date.now(),\n        })\n      }\n    }\n  }\n\n  onVisibilityChange: (event: Event) => void = (event) => {\n    if (\n      document.visibilityState === \"hidden\" &&\n      this.state.status === SESSION_STATUS.ONGOING\n    ) {\n      console.log(\"SHOULD PAUSE\", event)\n      if (this.timer) {\n        this.stopTimer()\n      }\n      this.persistState({ status: SESSION_STATUS.PAUSED })\n    }\n    if (\n      document.visibilityState === \"visible\" &&\n      this.state.status !== SESSION_STATUS.WAITING_NEXT\n    ) {\n      console.log(\"SHOULD RESTART\", event)\n      if (!this.timer) {\n        this.startTimer()\n      }\n      this.persistState({\n        status: SESSION_STATUS.ONGOING,\n        startSessionTime: Date.now() - this.state.timer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    const { visibilityChange } = getVisibilityEvent()\n\n    if (\n      !!visibilityChange &&\n      typeof document.addEventListener !== \"undefined\"\n    ) {\n      document.removeEventListener(\n        visibilityChange,\n        this.onVisibilityChange\n      )\n    }\n\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n    if (this.nextTimer) {\n      clearInterval(this.nextTimer)\n    }\n  }\n\n  render(): JSX.Element {\n    if (\n      this.state.status === SESSION_STATUS.ONGOING &&\n      this.state.contentsLoaded &&\n      !this.timer\n    ) {\n      this.startTimer()\n    }\n\n    if (\n      this.state.status === SESSION_STATUS.WAITING_NEXT &&\n      !this.nextTimer\n    ) {\n      console.log(\"starting next 3\")\n      this.startNextTimer()\n    }\n\n    return (\n      <SessionContext.Provider value={this.state}>\n        {this.state.active ? (\n          this.props.children\n        ) : (\n          <div\n            className=\"flex-1 flex-col items-center justify-center\"\n            style={{\n              background: `linear-gradient(90deg, #efebfa, transparent)`,\n            }}\n          >\n            <Header contentScrolled={false} contentsLoaded={false} />\n            <div className=\"flex flex-col items-center w-full\">\n              <div\n                className=\"mt-6 mb-2 text-black max-w-xs md:max-w-md text-center\"\n                style={{ letterSpacing: \"-0.3px\" }}\n              >\n                une petite pause avant de continuer ;)\n              </div>\n              <div\n                className=\"mb-6 text-text-lt max-w-xs md:max-w-md text-center\"\n                style={{ letterSpacing: \"-0.3px\" }}\n              >\n                il sera bientôt temps de contempler les montagnes à nouveau\n              </div>\n              <Timer value={this.state.nextTimer} />\n            </div>\n          </div>\n        )}\n      </SessionContext.Provider>\n    )\n  }\n}\n\nfunction getStoredSessionState(): SessionState | null {\n  const storedState = window.localStorage.getItem(\n    LOCAL_STORAGE_KEYS.SESSION_STATE\n  )\n\n  if (!!storedState) {\n    return JSON.parse(storedState) as SessionState\n  }\n\n  return null\n}\n\nfunction storeState(state: Partial<SessionState>) {\n  const prevState = getStoredSessionState()\n  const nextState = !!prevState ? { ...prevState, ...state } : state\n\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEYS.SESSION_STATE,\n    JSON.stringify(nextState)\n  )\n}\n","import React from \"react\"\nimport { SESSION_STATUS } from \"../controllers/Session\"\n\nexport const SessionContext = React.createContext({\n  active: false,\n  status: SESSION_STATUS.LOADING,\n  timer: 0,\n  duration: 180000,\n  contentsLoaded: false,\n  contentsCallback: () => console.log(\"\"),\n})\n","import React, { useContext } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport { SessionContext } from \"../contexts/SessionContext\"\n\nconst entryThreshold = 0.2,\n  exitThreshold = 0.8\n\nexport const DaylightBackground: React.FunctionComponent<{\n  contentsLoaded: boolean\n}> = (props) => {\n  const { active, timer, duration } = useContext(SessionContext)\n\n  const backgroundOpacity = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  })\n  const [{ progress }, setProgress] = useSpring(() => ({\n    progress: 0,\n    config: { duration: 1000 },\n  }))\n\n  setProgress({ progress: timer / duration })\n\n  const backgroundColor = progress.interpolate({\n    range: [0, entryThreshold, exitThreshold, 1],\n    output: [\"#ff9696\", \"#ffdaa7\", \"#ffdaa7\", \"#b09afe\"],\n  })\n\n  const gradientColor = progress.interpolate({\n    range: [0, entryThreshold, exitThreshold, 1],\n    output: [\"#ffe6e6\", \"#fff6ea\", \"#fff6ea\", \"#efebfa\"],\n  })\n\n  const transform = progress.interpolate(\n    (prog) =>\n      `translate(-${prog * (window.innerWidth + 64)}px,${\n        Math.pow(2 * prog - 1, 2) * 0.3 * window.innerHeight\n      }px)`\n  )\n\n  const gradient = {\n    background: `linear-gradient(${\n      270 - 180 * progress.getValue()\n    }deg, ${gradientColor.getValue()}, transparent)`,\n  }\n\n  return (\n    <animated.div\n      className=\"flex min-h-full w-full flex-col overflow-hidden\"\n      style={{ ...gradient, ...backgroundOpacity }}\n    >\n      {active ? (\n        <animated.div\n          className={`absolute rounded-2xl w-8 h-8`}\n          style={{\n            right: -32,\n            top: 32,\n            transform,\n            backgroundColor,\n          }}\n        ></animated.div>\n      ) : null}\n\n      {props.children}\n    </animated.div>\n  )\n}\n","import React from \"react\"\n\nexport const ScrollContext = React.createContext({\n  scrolling: false,\n  shouldReload: false,\n  deactivateReload: () => {\n    console.log(\"\")\n  },\n})\n","import React from \"react\"\nimport { Post } from \"../controllers/InstaFetcher\"\n\nexport const Picture: React.FunctionComponent<Post> = (props) => {\n  return (\n    <div className=\"block mb-4 rounded bg-white border border-yellow-border\">\n      <div className=\"font-yogasanspro py-4 px-3  font-bold text-black\">\n        {getRelativeTime(props.timestamp)}\n      </div>\n      <img\n        src={props.images.src}\n        alt={props.description}\n        style={{\n          objectFit: \"contain\",\n        }}\n      />\n      <div\n        className=\"font-yogasanspro py-3 px-3 text-md overflow-hidden\"\n        style={{ maxHeight: \"8.5rem\", letterSpacing: \"-0.3px\" }}\n      >\n        {props.description}\n      </div>\n    </div>\n  )\n}\n\nfunction getRelativeTime(timestamp: number): string {\n  const now = Date.now()\n  const post = timestamp * 1000\n  const formatter = new Intl.RelativeTimeFormat(\"fr\")\n  if (now - post < 3600000) {\n    const numberOfMinutes = Math.round((post - now) / 60000)\n    return formatter.format(numberOfMinutes, \"minutes\")\n  }\n  if (now - post < 864000000) {\n    const numberOfHours = Math.round((post - now) / 3600000)\n    return formatter.format(numberOfHours, \"hours\")\n  }\n\n  const numberOfDays = Math.round((post - now) / 86400000)\n  return formatter.format(numberOfDays, \"days\")\n}\n","import React, { useCallback, useContext, useEffect, useState } from \"react\"\nimport { animated, useSpring } from \"react-spring\"\nimport { ScrollContext } from \"../contexts/ScrollContext\"\nimport { Post } from \"../controllers/InstaFetcher\"\nimport { Picture } from \"./Picture\"\nimport Loader from \"react-loader-spinner\"\n\nconst postBatch = 9\ninterface Props {\n  posts: Post[]\n  contentsLoaded: boolean\n}\nexport const PostsFeed: React.FunctionComponent<Props> = ({\n  posts,\n  contentsLoaded,\n}: Props) => {\n  const [displayedPosts, setDisplayed] = useState<JSX.Element[]>([])\n  const [idsIndex, setIdsIndex] = useState<string[]>([])\n  const { shouldReload, deactivateReload } = useContext(ScrollContext)\n\n  const backgroundOpacity = useSpring({\n    opacity: contentsLoaded ? 1 : 0,\n  })\n\n  const loadBatch = useCallback(\n    (limit: number) => {\n      const newPosts: JSX.Element[] = []\n      const newIds: string[] = []\n\n      posts.forEach((post, index) => {\n        if (index < limit && !idsIndex.includes(post.id)) {\n          newPosts.push(<Picture key={post.id} {...post} />)\n          newIds.push(post.id)\n        }\n      })\n\n      setDisplayed([...displayedPosts, ...newPosts])\n      setIdsIndex([...idsIndex, ...newIds])\n    },\n    [posts]\n  )\n\n  useEffect(() => {\n    loadBatch(displayedPosts.length + postBatch)\n    deactivateReload()\n  }, [shouldReload])\n\n  if (posts.length > 0 && displayedPosts.length === 0) {\n    loadBatch(displayedPosts.length + postBatch)\n  }\n\n  return contentsLoaded ? (\n    <animated.div\n      className=\"w-5/6 md:w-1/2 lg:w-1/3\"\n      style={backgroundOpacity}\n    >\n      {displayedPosts.length > 0 ? (\n        <div\n          className=\"text-xl font-yogasanspro tracking-tight text-md px-1 pb-2\"\n          style={{ letterSpacing: \"-0.3px\" }}\n        >\n          🏔 monogatari de la Montagne (#chamonix)\n        </div>\n      ) : null}\n\n      {displayedPosts}\n    </animated.div>\n  ) : (\n    <animated.div className=\"flex flex-col items-center w-64\">\n      <Loader\n        type=\"Audio\"\n        color=\"#9a82e6\"\n        height={32}\n        width={32}\n        timeout={5000} //3 secs\n      />\n      <div\n        className=\"text-center mt-6 text-text-md\"\n        style={{ letterSpacing: \"-0.3px\" }}\n      >\n        la nuit venue, la neige fraîche refléta les astres dans un\n        silencieux scintillement\n      </div>\n    </animated.div>\n  )\n}\n","import { Post } from \"../controllers/InstaFetcher\"\n\nexport interface InstaImage {\n  src: string\n  config_width: number\n  config_height: number\n}\n\nexport function parseHtml(data: string): unknown {\n  const index = matchOrThrow(data, \"entry_data\")\n\n  const dataObj = data.substring(index)\n\n  const targetObject = [\"{\"]\n\n  try {\n    let charCounter = 0\n    let closureCount = 1\n\n    const openClosure = dataObj.substring(matchOrThrow(dataObj, \"{\") + 1)\n    const chars = openClosure.split(\"\")\n\n    while (closureCount > 0) {\n      if (chars[charCounter] === \"{\") {\n        closureCount += 1\n      }\n\n      if (chars[charCounter] === \"}\") {\n        closureCount -= 1\n      }\n\n      if (closureCount > 0) {\n        targetObject.push(chars[charCounter])\n      }\n\n      charCounter += 1\n    }\n    targetObject.push(\"}\")\n  } catch (error) {\n    console.error(error)\n  }\n\n  return JSON.parse(targetObject.join(\"\"))\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function extractPostsData(rawPosts: any): Post[] {\n  let posts =\n    rawPosts.TagPage[0].graphql.hashtag.edge_hashtag_to_media.edges\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  posts = posts.map((rawPost: any) => {\n    const { node } = rawPost\n    const { id } = node\n    const timestamp = node.taken_at_timestamp\n    let description = \"\"\n    try {\n      description = node.edge_media_to_caption.edges[0].node.text\n    } catch (error) {\n      console.error(error, node)\n    }\n\n    const images = node.thumbnail_resources.reduce(\n      (prev: InstaImage, current: InstaImage) => {\n        return prev.config_width < current.config_width ? current : prev\n      }\n    )\n\n    return { timestamp, images, description, id }\n  })\n\n  posts.sort((a: Post, b: Post) => b.timestamp - a.timestamp)\n  return posts\n}\n\nfunction matchOrThrow(data: string, target: string) {\n  const match = data.match(target)\n\n  if (!!match && !!match.index) {\n    return match.index\n  } else {\n    throw new Error(\"no data\")\n  }\n}\n","import { Component } from \"react\"\nimport miniget from \"miniget\"\nimport { SessionContext } from \"../contexts/SessionContext\"\nimport {\n  InstaImage,\n  parseHtml,\n  extractPostsData,\n} from \"../utils/fetchHashtag\"\n\ninterface Props {\n  hashtag: string\n  main?: boolean\n  render: (props: State) => JSX.Element\n}\n\ninterface State {\n  contentsLoaded: boolean\n  posts: Post[]\n}\n\nexport interface PostsList {\n  posts: Post[]\n}\nexport interface Post {\n  images: InstaImage\n  timestamp: number\n  description: string\n  id: string\n}\n\nexport class InstaFetcher extends Component<Props, State> {\n  static contextType = SessionContext\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      posts: [],\n      contentsLoaded: false,\n    }\n  }\n\n  async componentDidMount(): Promise<void> {\n    console.log(\"INSTA CONTEXT\", this.context)\n    const instaHtml = await miniget(\n      `https://instagram.com/explore/tags/${this.props.hashtag}/`\n    ).text()\n\n    const data = parseHtml(instaHtml)\n    const posts = extractPostsData(data)\n\n    this.setState({ posts, contentsLoaded: true })\n    this.context.contentsCallback()\n  }\n\n  render(): JSX.Element {\n    return this.props.render(this.state)\n  }\n}\n","import React, { useContext } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport { ScrollContext } from \"../contexts/ScrollContext\"\n\nexport const Hero = (props: { contentsLoaded: boolean }): JSX.Element => {\n  const { scrolling } = useContext(ScrollContext)\n  const { top } = useSpring({\n    top: scrolling ? 250 : 354,\n  })\n\n  const { opacity } = useSpring({\n    opacity: props.contentsLoaded ? 1 : 0,\n  })\n  console.log(\"TOP\", top.getValue(), scrolling)\n  return (\n    <animated.div\n      className=\"absolute max-w-xs text-center lg:text-left left-0 ml-8  z-10\"\n      style={{ top, opacity }}\n    >\n      <div\n        className=\"text-black font-yogasanspro font-bold flex-wrap text-xl\"\n        style={{ letterSpacing: \"-0.1px\" }}\n      >\n        shinsetsu présente les derniers posts sur le hashtag chamonix\n      </div>\n      <div className=\"text-text-lt flex-wrap mt-6\">\n        shinsetsu signifie la neige fraîche en japonais\n      </div>\n      <div className=\"text-text-lt flex-wrap mt-1\">\n        c&apos;est un projet de démo en react et typescript\n      </div>\n    </animated.div>\n  )\n}\n","import React, { Component } from \"react\"\nimport { Spring } from \"react-spring/renderprops\"\nimport { ScrollContext } from \"../contexts/ScrollContext\"\nimport Loader from \"react-loader-spinner\"\nimport { Hero } from \"../uicomponents/Hero\"\ninterface Props {\n  setContentScrolled: React.Dispatch<React.SetStateAction<boolean>>\n  contentsLoaded: boolean\n}\n\ninterface State {\n  scrolling: boolean\n  shouldReload: boolean\n  reloadAnim: boolean\n  deactivateReload: () => void\n}\n\nexport class ScrollController extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      scrolling: false,\n      shouldReload: false,\n      reloadAnim: false,\n      deactivateReload: () => this.setState({ shouldReload: false }),\n    }\n  }\n\n  scrollContainer: HTMLDivElement | null = null\n  reloadAnim: NodeJS.Timeout | null = null\n\n  handleScroll: (e: React.UIEvent<HTMLElement>) => void = (e) => {\n    const scrollMax = this.scrollContainer\n      ? this.scrollContainer.scrollHeight -\n        this.scrollContainer.clientHeight\n      : null\n\n    if (e.currentTarget.scrollTop > 16) {\n      this.setState((prevState) => {\n        if (prevState.scrolling) {\n          return null\n        } else {\n          this.props.setContentScrolled(true)\n          return { scrolling: true }\n        }\n      })\n    }\n\n    if (e.currentTarget.scrollTop <= 16) {\n      this.setState((prevState) => {\n        if (prevState.scrolling) {\n          this.props.setContentScrolled(false)\n          return { scrolling: false }\n        } else {\n          return null\n        }\n      })\n    }\n    if (!!scrollMax && e.currentTarget.scrollTop >= scrollMax - 16) {\n      this.setState((prevState) => {\n        if (prevState.reloadAnim) {\n          return null\n        } else {\n          return { reloadAnim: true }\n        }\n      })\n\n      if (!this.reloadAnim) {\n        this.reloadAnim = setTimeout(() => {\n          this.setState((prevState) => {\n            if (prevState.shouldReload) {\n              return null\n            } else {\n              return { shouldReload: true, reloadAnim: false }\n            }\n          })\n\n          if (this.reloadAnim) {\n            clearTimeout(this.reloadAnim)\n          }\n        }, 800)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <ScrollContext.Provider value={this.state}>\n        <Hero contentsLoaded={this.props.contentsLoaded} />\n\n        <Spring\n          from={{ transform: \"translate(0px, 0px)\" }}\n          to={{\n            transform: `translate(0px, ${\n              this.state.scrolling ? -104 : 0\n            }px)`,\n          }}\n        >\n          {(props) => (\n            <div\n              className=\"flex flex-col items-center overflow-y-auto pb-12\"\n              onScroll={this.handleScroll}\n              ref={(scrollContainer) =>\n                (this.scrollContainer = scrollContainer)\n              }\n              style={{ ...props, ...{ marginBottom: -104 } }}\n            >\n              {this.props.children}\n              {this.state.reloadAnim ? (\n                <div className=\"mt-6\">\n                  <Loader\n                    type=\"Audio\"\n                    color=\"#9a82e6\"\n                    height={32}\n                    width={32}\n                    timeout={5000} //3 secs\n                  />\n                </div>\n              ) : null}\n            </div>\n          )}\n        </Spring>\n      </ScrollContext.Provider>\n    )\n  }\n}\n","import React, { useState } from \"react\"\nimport \"../assets/styles/tailwind.output.css\"\nimport { DaylightBackground } from \"../uicomponents/DaylightBackground\"\nimport { Header } from \"../uicomponents/Header\"\nimport { PostsFeed } from \"../uicomponents/PostsFeed\"\nimport { InstaFetcher } from \"./InstaFetcher\"\nimport { ScrollController } from \"./ScrollController\"\nimport { Session } from \"./Session\"\n\nconst App: React.FunctionComponent<{}> = () => {\n  const [contentScrolled, setContentScrolled] = useState<boolean>(false)\n  return (\n    <div className=\"h-screen w-full flex\">\n      <Session>\n        <InstaFetcher\n          hashtag=\"chamonix\"\n          main\n          render={({ contentsLoaded, posts }) => (\n            <DaylightBackground contentsLoaded={contentsLoaded}>\n              <Header\n                contentScrolled={contentScrolled}\n                contentsLoaded={contentsLoaded}\n              />\n              <ScrollController\n                setContentScrolled={setContentScrolled}\n                contentsLoaded={contentsLoaded}\n              >\n                <PostsFeed posts={posts} contentsLoaded={contentsLoaded} />\n              </ScrollController>\n            </DaylightBackground>\n          )}\n        />\n      </Session>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry)\n        getFID(onPerfEntry)\n        getFCP(onPerfEntry)\n        getLCP(onPerfEntry)\n        getTTFB(onPerfEntry)\n      }\n    )\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./assets/styles/index.css\"\nimport App from \"./controllers/App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}